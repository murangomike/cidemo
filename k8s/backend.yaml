---
# Backend ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  labels:
    app: backend
data:
  NODE_ENV: "production"
  DATABASE_URL: "postgresql://postgres:password123@postgres-service:5432/crudapp"

---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: 3  # Start with 3 replicas for scaling demonstration
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: murango001/ciddemo:latest  # Using Docker Hub image
        imagePullPolicy: Always  # Always pull latest image
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: backend-config
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
# Backend LoadBalancer Service (for external access)
apiVersion: v1
kind: Service
metadata:
  name: backend-loadbalancer
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  type: LoadBalancer
